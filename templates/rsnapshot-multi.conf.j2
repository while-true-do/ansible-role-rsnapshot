#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULE:        #
#                                               #
# This file requires tabs between elements      #
#                                               #
#################################################

#######################
# CONFIG FILE VERSION #
#######################

config_version	{{ item.config_version | default(wtd_rsnapshot_config_version) }}

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
snapshot_root	{{ item.snapshot_root | default(wtd_rsnapshot_config_snapshot_root) }}

# if defined no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if defined you are backing
# up to removable media, such as a FireWire or USB drive.
#
{% if item.no_ceate_root is defined %} 
no_create_root	{{ item.no_create_root }}
{% else %}
#no_create_root  1
{% endif %}

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
#
# See the README file or the man page for more details.
#
{% if item.cmd_cp is defined %}
cmd_cp	{{ item.cmd_cp }}
{% else %}
#cmd_cp	/usr/bin/cp
{% endif %}

# uncomment this to use the rm program instead of the built-in perl routine.
#
{% if item.cmd_rm is defined %}
cmd_rm	{{ item.cmd_rm }}
{% endif %}
{% if item.cmd_rm is defined %}
cmd_rm	{{ item.cmd_rm }}
{% else %}
cmd_rm	/usr/bin/rm
{% endif %}

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
#
{% if item.cmd_rsync is defined %}
cmd_rsync	{{ item.cmd_rsync }}
{% else %}
cmd_rsync	/usr/bin/rsync
{% endif %}

# Uncomment this to enable remote ssh backups over rsync.
#
{% if item.cmd_ssh is defined %}
cmd_ssh	{{ item.cmd_ssh }}
{% else %}
#cmd_ssh	/usr/bin/ssh
{% endif %}

# Comment this out to disable syslog support.
#
{% if item.cmd_logger is defined %}
cmd_logger	{{ item.cmd_logger }}
{% else %}
#cmd_logger	/usr/bin/logger
{% endif %}

# Uncomment this to specif definedy the path to "du" for disk usage checks.
# if defined you have an older version of "du", you may also want to check the
# "du_args" parameter below.
#
{% if item.cmd_du is defined %}
cmd_du	{{ item.cmd_du }}
{% else %}
#cmd_du	/usr/bin/du
{% endif %}

# Uncomment this to specif definedy the path to rsnapshot-dif definedf.
#
{% if item.cmd_rsnapshot_dif is defined %}
cmd_rsnapshot_diff	{{ item.cmd_rsnapshot_diff }}
{% else %}
#cmd_rsnapshot_diff	/usr/local/bin/rsnapshot-diff
{% endif %}

# Specif definedy the path to a script (and any optional arguments) to run right
# before rsnapshot syncs files
#
{% if item.cmd_preexec is defined %}
cmd_preexec	{{ item.cmd_preexec }}
{% else %}
#cmd_preexec	/path/to/preexec/script
{% endif %}

# Specif definedy the path to a script (and any optional arguments) to run right
# after rsnapshot syncs files
#
{% if item.cmd_postexec is defined %}
cmd_postexec	{{ item.cmd_postexec }}
{% else %}
#cmd_postexec	/path/to/postexec/script
{% endif %}

# Paths to lvcreate, lvremove, mount and umount commands, for use with
# Linux LVMs.
#
{% if item.linux_lvm_cmd_lvcreate is defined %}
linux_lvm_cmd_lvcreate	{{ item.linux_lvm_cmd_lvcreate }}
{% else %}
#linux_lvm_cmd_lvcreate	/usr/sbin/lvcreate
{% endif %}

{% if item.linux_lvm_cmd_lvremove is defined %}
linux_lvm_cmd_lvremove	{{ item.linux_lvm_cmd_lvremove }}
{% else %}
#linux_lvm_cmd_lvremove	/usr/sbin/lvremove
{% endif %}
{% if item.linux_lvm_cmd_mount is defined %}
linux_lvm_cmd_mount	{{ item.linux_lvm_cmd_mount }}
{% else %}
#linux_lvm_cmd_mount	/usr/bin/mount
{% endif %}
{% if item.linux_lvm_cmd_umount is defined %}
linux_lvm_cmd_umount	{{ item.linux_lvm_cmd_umount }}
{% else %}
#linux_lvm_cmd_umount	/usr/bin/umount
{% endif %}

#########################################
#     BACKUP LEVELS / INTERVALS         #
# Must be unique and in ascending order #
# e.g. alpha, beta, gamma, etc.         #
#########################################

{% if item.retains is defined %}
{% for e in item.retains %}
retain	{{ e.name }}	{{ e.value }}
{% endfor %}
{% endif %}

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#

verbose	{{ item.verbose | default(wtd_rsnapshot_config_verbose) }}

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if defined one is being used. The default is 3.
#
loglevel	{{ item.loglevel | default(wtd_rsnapshot_config_loglevel) }}

# if defined you enable this, data will be written to the file you specif definedy. The
# amount of data written is controlled by the "loglevel" parameter.
#
{% if item.logfile is defined %}
logfile	{{ item.logfile }}
{% else %}
#logfile	/var/log/rsnapshot
{% endif %}

# if defined enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# if defined you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
#
lockfile	{{ item.lockfile | default(wtd_rsnapshot_config_lockfile) }}

# By default, rsnapshot check lockfile, check if defined PID is running
# and if defined not, consider lockfile as stale, then start
# Enabling this stop rsnapshot if defined PID in lockfile is not running
#
{% if item.stop_on_stale_lockfile is defined %}
stop_on_stale_lockfile	{{ item.stop_on_stale_lockfile }}
{% else %}
#stop_on_stale_lockfile	0
{% endif %}

# Default rsync args. All rsync commands have at least these options set.
#
{% if item.rsync_short_args is defined %}
rsync_short_args	{{ item.rsync_short_args }}
{% else %}
#rync_short_args	-a
{% endif %}
{% if item.rsync_long_args is defined %}
rsync_long_args	{{ item.rsync_long_args }}
{% else %}
#rsync_long_args	--delete --numeric-ids --relative --delete-excluded
{% endif %}

# ssh has no args passed by default, but you can specif definedy some here.
#
{% if item.ssh_args is defined %}
ssh_args	{{ item.ssh_args }}
{% else %}
#ssh_args	-p 22
{% endif %}

# Default arguments for the "du" program (for disk space reporting).
# The GNU version of "du" is preferred. See the man page for more details.
# if defined your version of "du" doesn't support the -h flag, try -k flag instead.
#
{% if item.du_args is defined %}
du_args	{{ item.du_args }}
{% else %}
#du_args	-csh
{% endif %}

# if defined this is enabled, rsync won't span filesystem partitions within a
# backup point. This essentially passes the -x option to rsync.
# The default is 0 (off).
#
{% if item.one_fs is defined %}
one_fs	{{ item.one_fs }}
{% else %}
#one_fs	0
{% endif %}

# The include and exclude parameters, if defined enabled, simply get passed directly
# to rsync. if defined you have multiple include/exclude patterns, put each one on a
# separate line. Please look up the --include and --exclude options in the
# rsync man page for more details on how to specif definedy file name patterns. 
# 
{% if item.include  is defined %}
{% for e in item.include %}
include	{{ e.value }}
{% endfor %}
{% else %}
#include  ???
#include  ???
{% endif %}

{% if item.exclude is defined %}
{% for e in item.exclude %}
exclude	{{ e.value }}
{% endfor %}
{% else %}
#exclude  ???
#exclude  ???
{% endif %}

# The include_file and exclude_file parameters, if defined enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#
{% if item.include_file is defined %}
{% for e in item.include_file %}
include_file	{{ e.value }}
{% endfor %}
{% else %}
#include_file	/path/to/include/file
{% endif %}

{% if item.exclude_file is defined %}
{% for e in item.exclude_file %}
exclude_file	{{ e.value }}
{% endfor %}
{% else %}
#exclude_file	/path/to/exclude/file
{% endif %}

# if defined your version of rsync supports --link-dest, consider enabling this.
# This is the best way to support special files (Fif definedOs, etc) cross-platform.
# The default is 0 (off).
#
{% if item.link_dest is defined %}
link_dest	{{ item.link_dest }}
{% else %}
#link_dest  0
{% endif %}

# When sync_first is enabled, it changes the default behaviour of rsnapshot.
# Normally, when rsnapshot is called with its lowest interval
# (i.e.: "rsnapshot alpha"), it will sync files AND rotate the lowest
# intervals. With sync_first enabled, "rsnapshot sync" handles the file sync,
# and all interval calls simply rotate files. See the man page for more
# details. The default is 0 (off).
#
{% if wtd_rsnaphsot_config_sync_first is defined %}
sync_first	{{ item.sync_first }}
{% else %}
#sync_first 0
{% endif %}

# if defined enabled, rsnapshot will move the oldest directory for each interval
# to [interval_name].delete, then it will remove the lockfile and delete
# that directory just before it exits. The default is 0 (off).
#
{% if item.use_lazy_deletes is defined %}
use_lazy_deletes	{{ item.use_lazy_deleted }}
{% else %}
#use_lazy_deletes 0
{% endif %}

# Number of rsync re-tries. if defined you experience any network problems or
# network card issues that tend to cause ssh to fail with errors like
# "Corrupted MAC on input", for example, set this to a non-zero value
# to have the rsync operation re-tried.
#
{% if item.rsync_numtries is defined %}
rsync_numtries	{{ item.rsync_numtries }}
{% else %}
#rsync_numtries 0
{% endif %}

# LVM parameters. Used to backup with creating lvm snapshot before backup
# and removing it after. This should ensure consistency of data in some special
# cases
#
# LVM snapshot(s) size (lvcreate --size option).
#
{% if item.linux_lvm_snapshotsize is defined %}
linux_lvm_snapshotsize	{{ item.linux_lvm_snapshotsize }}
{% else %}
#linux_lvm_snapshotsize 100M
{% endif %}

# Name to be used when creating the LVM logical volume snapshot(s).
#
{% if item.linux_lvm_snapshotname is defined %}
linux_lvm_snapshotname	{{ item.linux_lvm_snahshotname }}
{% else %}
#linux_lvm_snapshotname rsnapshot
{% endif %}

# Path to the LVM Volume Groups.
#
{% if item.linux_lvm_vgpath is defined %}
linux_lvm_vgpath	{{ item.linux_lvm_vgpath }}
{% else %}
#linux_lvm_vgpath /dev
{% endif %}

# Mount point to use to temporarily mount the snapshot(s).
#
{% if item.linux_lvm_mountpath is defined %}
linux_lvm_mountpath	{{ item.linux_lvm_mountpath }}
{% else %}
#linux_lvm_mountpath  /path/to/mount/lvm/snapshot/during/backup
{% endif %}

###############################
### BACKUP POINTS / SCRIPTS ###
###############################

# LOCALHOST

{% if item.backups is defined %}
{% for e in item.backups %}
backup	{{ e.src }}	{{ e.target }}
{% endfor %}
{% else %}
# LOCALHOST
backup  /home/          localhost/
backup  /etc/           localhost/
backup  /usr/local/     localhost/
#backup /var/log/rsnapshot              localhost/
#backup /etc/passwd     localhost/
#backup /home/foo/My Documents/         localhost/
#backup /foo/bar/       localhost/      one_fs=1, rsync_short_args=-urltvpog
#backup_script  /usr/local/bin/backup_pgsql.sh  localhost/postgres/
# You must set linux_lvm_* parameters below before using lvm snapshots
#backup lvm://vg0/xen-home/     lvm-vg0/xen-home/

# EXAMPLE.COM
#backup_exec    /bin/date "+ backup of example.com started at %c"
#backup root@example.com:/home/ example.com/    +rsync_long_args=--bwlimit=16,exclude=core
#backup root@example.com:/etc/  example.com/    exclude=mtab,exclude=core
#backup_exec    ssh root@example.com "mysqldump -A > /var/db/dump/mysql.sql"
#backup root@example.com:/var/db/dump/  example.com/
#backup_exec    /bin/date "+ backup of example.com ended at %c"

# CVS.SOURCEFORGE.NET
#backup_script  /usr/local/bin/backup_rsnapshot_cvsroot.sh      rsnapshot.cvs.sourceforge.net/

# RSYNC.SAMBA.ORG
#backup rsync://rsync.samba.org/rsyncftp/       rsync.samba.org/rsyncftp/

{% endif %}
